services:
  psql:
    container_name: mocogi-db
    image: postgres:17.4-alpine3.21
    restart: always
    expose:
      - 5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - psql_vol:/var/lib/postgresql/data

  core:
    container_name: mocogi-core
    image: mocogi-core
    restart: always
    build:
      context: .
      dockerfile: Dockerfile_Dependencies
      args:
        PANDOC_PLATFORM_SUFFIX: arm64
  #        PANDOC_PLATFORM_SUFFIX: amd64

  backend:
    container_name: mocogi-backend
    image: mocogi-backend
    restart: always
    expose:
      - 9000
    volumes:
      - backend_logs_vol:/mocogi/logs
      - app_vol:/mocogi/output
      - mc_vol:/mocogi/mc
    depends_on:
      - psql
      - core
    build:
      context: .
      dockerfile: Dockerfile
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}

  frontend:
    container_name: mocogi-frontend
    image: mocogi-frontend
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"
        ]
      interval: 30s
      timeout: 3s
      start_period: 40s
      retries: 3
    # Resource limits (adjust as needed)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Logging configuration
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

volumes:
  backend_logs_vol:
  psql_vol:
  app_vol:
  mc_vol: