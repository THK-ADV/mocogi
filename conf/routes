
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET           /                                                controllers.HomeController.index

GET           /me                                              controllers.MeController.me()

GET           /createViews                                     controllers.BootstrapController.createViews()

# Big Bang
GET           /bigbang                                         controllers.BigBangController.go()
GET           /bigbangCatalogs                                 controllers.BigBangController.goCatalogs()

# Git Webhooks

POST          /webhook/onPushEvent                             controllers.GitWebhookController.onPushEvent()
POST          /webhook/onMergeEvent                            controllers.GitWebhookController.onMergeEvent()

# Git

POST          /git/coreFiles                                   controllers.GitController.updateCoreFiles()
POST          /git/moduleFiles                                 controllers.GitController.updateModuleFiles()

# Core

GET           /locations                                       controllers.LocationController.all()
GET           /languages                                       controllers.LanguageController.all()
GET           /status                                          controllers.StatusController.all()
GET           /assessmentMethods                               controllers.AssessmentMethodController.all()
GET           /moduleTypes                                     controllers.ModuleTypeController.all()
GET           /seasons                                         controllers.SeasonController.all()
GET           /identities                                      controllers.IdentityController.all()
GET           /pos                                             controllers.POController.all()
GET           /degrees                                         controllers.DegreeController.all()
GET           /focusAreas                                      controllers.FocusAreaController.all()
GET           /faculties                                       controllers.FacultyController.all()
GET           /globalCriteria                                  controllers.GlobalCriteriaController.all()
GET           /studyPrograms                                   controllers.StudyProgramController.all()
GET           /competences                                     controllers.CompetenceController.all()
GET           /specializations                                 controllers.SpecializationController.all()
GET           /examPhases                                      controllers.ExamPhaseController.all()

# Module

GET           /modules                                         controllers.ModuleController.all()
GET           /modules/:id                                     controllers.ModuleController.get(id: java.util.UUID)
GET           /modules/:id/preview                             controllers.ModuleController.getPreview(id: java.util.UUID)
GET           /modules/:id/latest                              controllers.ModuleController.getLatest(id: java.util.UUID)
GET           /modules/:id/file                                controllers.ModuleController.getFile(id: java.util.UUID)
GET           /modules/:id/preview/file                        controllers.ModuleController.getPreviewFile(id: java.util.UUID)
GET           /modules/:id/latest/file                         controllers.ModuleController.getLatestFile(id: java.util.UUID)

# Module Catalog

GET           /moduleCatalogs/:semester                        controllers.ModuleCatalogController.allFromSemester(semester: java.lang.String)
GET           /moduleCatalogs/preview/:studyProgram/:po        controllers.ModuleCatalogController.getPreview(studyProgram: java.lang.String, po: java.lang.String)

# Module

# Module Draft

GET           /moduleDrafts/own                                controllers.ModuleDraftController.moduleDrafts()
GET           /moduleDrafts/:id/keys                           controllers.ModuleDraftController.keys(id: java.util.UUID)
POST          /moduleDrafts                                    controllers.ModuleDraftController.createNewModuleDraft()
PUT           /moduleDrafts/:id                                controllers.ModuleDraftController.createOrUpdateModuleDraft(id: java.util.UUID)
DELETE        /moduleDrafts/:id                                controllers.ModuleDraftController.deleteModuleDraft(id: java.util.UUID)

# Review
POST          /moduleReviews/:id                               controllers.ModuleDraftReviewController.create(id: java.util.UUID)
DELETE        /moduleReviews/:id                               controllers.ModuleDraftReviewController.delete(id: java.util.UUID)

# Approval
GET           /moduleApprovals/own                             controllers.ModuleDraftApprovalController.getOwn()
GET           /moduleApprovals/:moduleId                       controllers.ModuleDraftApprovalController.getByModule(moduleId: java.util.UUID)
PUT           /moduleApprovals/:moduleId/:reviewId             controllers.ModuleDraftApprovalController.update(moduleId: java.util.UUID, reviewId: java.util.UUID)

# Module Update Permissions

GET           /moduleUpdatePermissions/own                     controllers.ModuleUpdatePermissionController.getOwn()
GET           /moduleUpdatePermissions/:moduleId               controllers.ModuleUpdatePermissionController.allByModule(moduleId: java.util.UUID)
POST          /moduleUpdatePermissions/:moduleId               controllers.ModuleUpdatePermissionController.replace(moduleId: java.util.UUID)

# Electives

GET           /electivesCatalogs/:semester                     controllers.ElectiveCatalogueController.allFromSemester(semester: java.lang.String)

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                    controllers.Assets.versioned(path="/public", file: Asset)
GET           /files/*file                                     controllers.FileController.get(file: Asset)